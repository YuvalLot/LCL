
import Math;

set AllSolutions
    case ?x, ?y, ?z then hAllSolutions(?x, ?y, ?z);

set Repeat as recursive
    case 0, ?p, ?x, ?x
    case ?n, ?p, ?x, ?y then ?p(?x, ?t) & Sub(?n, 1, ?nm1) & Repeat(?nm1, ?p, ?t, ?y);

package PatternToListPackage{?p}
	case ?x then ?p(%?x);

set PatternToList
    case ?p1, ?p2 then E(?p2, PatternToListPackage{?p1});

package AndPackage{?p1, ?p2}
    case ?x0 then ?p1(?x0) & ?p2(?x0)
	case ?x0,?x1 then ?p1(?x0,?x1) & ?p2(?x0,?x1)
	case ?x0,?x1,?x2 then ?p1(?x0,?x1,?x2) & ?p2(?x0,?x1,?x2)
	case ?x0,?x1,?x2,?x3 then ?p1(?x0,?x1,?x2,?x3) & ?p2(?x0,?x1,?x2,?x3)
	case ?x0,?x1,?x2,?x3,?x4 then ?p1(?x0,?x1,?x2,?x3,?x4) & ?p2(?x0,?x1,?x2,?x3,?x4)
	case ?x0,?x1,?x2,?x3,?x4,?x5 then ?p1(?x0,?x1,?x2,?x3,?x4,?x5) & ?p2(?x0,?x1,?x2,?x3,?x4,?x5)
	case ?x0,?x1,?x2,?x3,?x4,?x5,?x6 then ?p1(?x0,?x1,?x2,?x3,?x4,?x5,?x6) & ?p2(?x0,?x1,?x2,?x3,?x4,?x5,?x6)
	case ?x0,?x1,?x2,?x3,?x4,?x5,?x6,?x7 then ?p1(?x0,?x1,?x2,?x3,?x4,?x5,?x6,?x7) & ?p2(?x0,?x1,?x2,?x3,?x4,?x5,?x6,?x7)
	case ?x0,?x1,?x2,?x3,?x4,?x5,?x6,?x7,?x8 then ?p1(?x0,?x1,?x2,?x3,?x4,?x5,?x6,?x7,?x8) & ?p2(?x0,?x1,?x2,?x3,?x4,?x5,?x6,?x7,?x8)
	case ?x0,?x1,?x2,?x3,?x4,?x5,?x6,?x7,?x8,?x9 then ?p1(?x0,?x1,?x2,?x3,?x4,?x5,?x6,?x7,?x8,?x9) & ?p2(?x0,?x1,?x2,?x3,?x4,?x5,?x6,?x7,?x8,?x9)
	case ?x0,?x1,?x2,?x3,?x4,?x5,?x6,?x7,?x8,?x9,?x10 then ?p1(?x0,?x1,?x2,?x3,?x4,?x5,?x6,?x7,?x8,?x9,?x10) & ?p2(?x0,?x1,?x2,?x3,?x4,?x5,?x6,?x7,?x8,?x9,?x10)
	case ?x0,?x1,?x2,?x3,?x4,?x5,?x6,?x7,?x8,?x9,?x10,?x11 then ?p1(?x0,?x1,?x2,?x3,?x4,?x5,?x6,?x7,?x8,?x9,?x10,?x11) & ?p2(?x0,?x1,?x2,?x3,?x4,?x5,?x6,?x7,?x8,?x9,?x10,?x11)
	case ?x0,?x1,?x2,?x3,?x4,?x5,?x6,?x7,?x8,?x9,?x10,?x11,?x12 then ?p1(?x0,?x1,?x2,?x3,?x4,?x5,?x6,?x7,?x8,?x9,?x10,?x11,?x12) & ?p2(?x0,?x1,?x2,?x3,?x4,?x5,?x6,?x7,?x8,?x9,?x10,?x11,?x12)
	case ?x0,?x1,?x2,?x3,?x4,?x5,?x6,?x7,?x8,?x9,?x10,?x11,?x12,?x13 then ?p1(?x0,?x1,?x2,?x3,?x4,?x5,?x6,?x7,?x8,?x9,?x10,?x11,?x12,?x13) & ?p2(?x0,?x1,?x2,?x3,?x4,?x5,?x6,?x7,?x8,?x9,?x10,?x11,?x12,?x13)
	case ?x0,?x1,?x2,?x3,?x4,?x5,?x6,?x7,?x8,?x9,?x10,?x11,?x12,?x13,?x14 then ?p1(?x0,?x1,?x2,?x3,?x4,?x5,?x6,?x7,?x8,?x9,?x10,?x11,?x12,?x13,?x14) & ?p2(?x0,?x1,?x2,?x3,?x4,?x5,?x6,?x7,?x8,?x9,?x10,?x11,?x12,?x13,?x14);

set And
    case ?p1, ?p2, ?p3 then E(AndPackage{?p1, ?p2}, ?p3);

package OrPackage{?p1, ?p2}
    case ?x0 then ?p1(?x0) | ?p2(?x0)
	case ?x0,?x1 then ?p1(?x0,?x1) | ?p2(?x0,?x1)
	case ?x0,?x1,?x2 then ?p1(?x0,?x1,?x2) | ?p2(?x0,?x1,?x2)
	case ?x0,?x1,?x2,?x3 then ?p1(?x0,?x1,?x2,?x3) | ?p2(?x0,?x1,?x2,?x3)
	case ?x0,?x1,?x2,?x3,?x4 then ?p1(?x0,?x1,?x2,?x3,?x4) | ?p2(?x0,?x1,?x2,?x3,?x4)
	case ?x0,?x1,?x2,?x3,?x4,?x5 then ?p1(?x0,?x1,?x2,?x3,?x4,?x5) | ?p2(?x0,?x1,?x2,?x3,?x4,?x5)
	case ?x0,?x1,?x2,?x3,?x4,?x5,?x6 then ?p1(?x0,?x1,?x2,?x3,?x4,?x5,?x6) | ?p2(?x0,?x1,?x2,?x3,?x4,?x5,?x6)
	case ?x0,?x1,?x2,?x3,?x4,?x5,?x6,?x7 then ?p1(?x0,?x1,?x2,?x3,?x4,?x5,?x6,?x7) | ?p2(?x0,?x1,?x2,?x3,?x4,?x5,?x6,?x7)
	case ?x0,?x1,?x2,?x3,?x4,?x5,?x6,?x7,?x8 then ?p1(?x0,?x1,?x2,?x3,?x4,?x5,?x6,?x7,?x8) | ?p2(?x0,?x1,?x2,?x3,?x4,?x5,?x6,?x7,?x8)
	case ?x0,?x1,?x2,?x3,?x4,?x5,?x6,?x7,?x8,?x9 then ?p1(?x0,?x1,?x2,?x3,?x4,?x5,?x6,?x7,?x8,?x9) | ?p2(?x0,?x1,?x2,?x3,?x4,?x5,?x6,?x7,?x8,?x9)
	case ?x0,?x1,?x2,?x3,?x4,?x5,?x6,?x7,?x8,?x9,?x10 then ?p1(?x0,?x1,?x2,?x3,?x4,?x5,?x6,?x7,?x8,?x9,?x10) | ?p2(?x0,?x1,?x2,?x3,?x4,?x5,?x6,?x7,?x8,?x9,?x10)
	case ?x0,?x1,?x2,?x3,?x4,?x5,?x6,?x7,?x8,?x9,?x10,?x11 then ?p1(?x0,?x1,?x2,?x3,?x4,?x5,?x6,?x7,?x8,?x9,?x10,?x11) | ?p2(?x0,?x1,?x2,?x3,?x4,?x5,?x6,?x7,?x8,?x9,?x10,?x11)
	case ?x0,?x1,?x2,?x3,?x4,?x5,?x6,?x7,?x8,?x9,?x10,?x11,?x12 then ?p1(?x0,?x1,?x2,?x3,?x4,?x5,?x6,?x7,?x8,?x9,?x10,?x11,?x12) | ?p2(?x0,?x1,?x2,?x3,?x4,?x5,?x6,?x7,?x8,?x9,?x10,?x11,?x12)
	case ?x0,?x1,?x2,?x3,?x4,?x5,?x6,?x7,?x8,?x9,?x10,?x11,?x12,?x13 then ?p1(?x0,?x1,?x2,?x3,?x4,?x5,?x6,?x7,?x8,?x9,?x10,?x11,?x12,?x13) | ?p2(?x0,?x1,?x2,?x3,?x4,?x5,?x6,?x7,?x8,?x9,?x10,?x11,?x12,?x13)
	case ?x0,?x1,?x2,?x3,?x4,?x5,?x6,?x7,?x8,?x9,?x10,?x11,?x12,?x13,?x14 then ?p1(?x0,?x1,?x2,?x3,?x4,?x5,?x6,?x7,?x8,?x9,?x10,?x11,?x12,?x13,?x14) | ?p2(?x0,?x1,?x2,?x3,?x4,?x5,?x6,?x7,?x8,?x9,?x10,?x11,?x12,?x13,?x14);
    
set Or
    case ?p1, ?p2, ?p3 then E(OrPackage{?p1, ?p2}, ?p3);

package AndNotPackage{?p1, ?p2}
    case ?x0 then ?p1(?x0) & ~?p2(?x0)
	case ?x0,?x1 then ?p1(?x0,?x1) & ~?p2(?x0,?x1)
	case ?x0,?x1,?x2 then ?p1(?x0,?x1,?x2) & ~?p2(?x0,?x1,?x2)
	case ?x0,?x1,?x2,?x3 then ?p1(?x0,?x1,?x2,?x3) & ~?p2(?x0,?x1,?x2,?x3)
	case ?x0,?x1,?x2,?x3,?x4 then ?p1(?x0,?x1,?x2,?x3,?x4) & ~?p2(?x0,?x1,?x2,?x3,?x4)
	case ?x0,?x1,?x2,?x3,?x4,?x5 then ?p1(?x0,?x1,?x2,?x3,?x4,?x5) & ~?p2(?x0,?x1,?x2,?x3,?x4,?x5)
	case ?x0,?x1,?x2,?x3,?x4,?x5,?x6 then ?p1(?x0,?x1,?x2,?x3,?x4,?x5,?x6) & ~?p2(?x0,?x1,?x2,?x3,?x4,?x5,?x6)
	case ?x0,?x1,?x2,?x3,?x4,?x5,?x6,?x7 then ?p1(?x0,?x1,?x2,?x3,?x4,?x5,?x6,?x7) & ~?p2(?x0,?x1,?x2,?x3,?x4,?x5,?x6,?x7)
	case ?x0,?x1,?x2,?x3,?x4,?x5,?x6,?x7,?x8 then ?p1(?x0,?x1,?x2,?x3,?x4,?x5,?x6,?x7,?x8) & ~?p2(?x0,?x1,?x2,?x3,?x4,?x5,?x6,?x7,?x8)
	case ?x0,?x1,?x2,?x3,?x4,?x5,?x6,?x7,?x8,?x9 then ?p1(?x0,?x1,?x2,?x3,?x4,?x5,?x6,?x7,?x8,?x9) & ~?p2(?x0,?x1,?x2,?x3,?x4,?x5,?x6,?x7,?x8,?x9)
	case ?x0,?x1,?x2,?x3,?x4,?x5,?x6,?x7,?x8,?x9,?x10 then ?p1(?x0,?x1,?x2,?x3,?x4,?x5,?x6,?x7,?x8,?x9,?x10) & ~?p2(?x0,?x1,?x2,?x3,?x4,?x5,?x6,?x7,?x8,?x9,?x10)
	case ?x0,?x1,?x2,?x3,?x4,?x5,?x6,?x7,?x8,?x9,?x10,?x11 then ?p1(?x0,?x1,?x2,?x3,?x4,?x5,?x6,?x7,?x8,?x9,?x10,?x11) & ~?p2(?x0,?x1,?x2,?x3,?x4,?x5,?x6,?x7,?x8,?x9,?x10,?x11)
	case ?x0,?x1,?x2,?x3,?x4,?x5,?x6,?x7,?x8,?x9,?x10,?x11,?x12 then ?p1(?x0,?x1,?x2,?x3,?x4,?x5,?x6,?x7,?x8,?x9,?x10,?x11,?x12) & ~?p2(?x0,?x1,?x2,?x3,?x4,?x5,?x6,?x7,?x8,?x9,?x10,?x11,?x12)
	case ?x0,?x1,?x2,?x3,?x4,?x5,?x6,?x7,?x8,?x9,?x10,?x11,?x12,?x13 then ?p1(?x0,?x1,?x2,?x3,?x4,?x5,?x6,?x7,?x8,?x9,?x10,?x11,?x12,?x13) & ~?p2(?x0,?x1,?x2,?x3,?x4,?x5,?x6,?x7,?x8,?x9,?x10,?x11,?x12,?x13)
	case ?x0,?x1,?x2,?x3,?x4,?x5,?x6,?x7,?x8,?x9,?x10,?x11,?x12,?x13,?x14 then ?p1(?x0,?x1,?x2,?x3,?x4,?x5,?x6,?x7,?x8,?x9,?x10,?x11,?x12,?x13,?x14) & ~?p2(?x0,?x1,?x2,?x3,?x4,?x5,?x6,?x7,?x8,?x9,?x10,?x11,?x12,?x13,?x14);

set AndNot
    case ?p1, ?p2, ?p3 then E(AndNotPackage{?p1, ?p2}, ?p3);
    
package LazyOrPackage{?p1, ?p2}
    case ?x0 then ?p1(?x0) $ ?p2(?x0)
	case ?x0,?x1 then ?p1(?x0,?x1) $ ?p2(?x0,?x1)
	case ?x0,?x1,?x2 then ?p1(?x0,?x1,?x2) $ ?p2(?x0,?x1,?x2)
	case ?x0,?x1,?x2,?x3 then ?p1(?x0,?x1,?x2,?x3) $ ?p2(?x0,?x1,?x2,?x3)
	case ?x0,?x1,?x2,?x3,?x4 then ?p1(?x0,?x1,?x2,?x3,?x4) $ ?p2(?x0,?x1,?x2,?x3,?x4)
	case ?x0,?x1,?x2,?x3,?x4,?x5 then ?p1(?x0,?x1,?x2,?x3,?x4,?x5) $ ?p2(?x0,?x1,?x2,?x3,?x4,?x5)
	case ?x0,?x1,?x2,?x3,?x4,?x5,?x6 then ?p1(?x0,?x1,?x2,?x3,?x4,?x5,?x6) $ ?p2(?x0,?x1,?x2,?x3,?x4,?x5,?x6)
	case ?x0,?x1,?x2,?x3,?x4,?x5,?x6,?x7 then ?p1(?x0,?x1,?x2,?x3,?x4,?x5,?x6,?x7) $ ?p2(?x0,?x1,?x2,?x3,?x4,?x5,?x6,?x7)
	case ?x0,?x1,?x2,?x3,?x4,?x5,?x6,?x7,?x8 then ?p1(?x0,?x1,?x2,?x3,?x4,?x5,?x6,?x7,?x8) $ ?p2(?x0,?x1,?x2,?x3,?x4,?x5,?x6,?x7,?x8)
	case ?x0,?x1,?x2,?x3,?x4,?x5,?x6,?x7,?x8,?x9 then ?p1(?x0,?x1,?x2,?x3,?x4,?x5,?x6,?x7,?x8,?x9) $ ?p2(?x0,?x1,?x2,?x3,?x4,?x5,?x6,?x7,?x8,?x9)
	case ?x0,?x1,?x2,?x3,?x4,?x5,?x6,?x7,?x8,?x9,?x10 then ?p1(?x0,?x1,?x2,?x3,?x4,?x5,?x6,?x7,?x8,?x9,?x10) $ ?p2(?x0,?x1,?x2,?x3,?x4,?x5,?x6,?x7,?x8,?x9,?x10)
	case ?x0,?x1,?x2,?x3,?x4,?x5,?x6,?x7,?x8,?x9,?x10,?x11 then ?p1(?x0,?x1,?x2,?x3,?x4,?x5,?x6,?x7,?x8,?x9,?x10,?x11) $ ?p2(?x0,?x1,?x2,?x3,?x4,?x5,?x6,?x7,?x8,?x9,?x10,?x11)
	case ?x0,?x1,?x2,?x3,?x4,?x5,?x6,?x7,?x8,?x9,?x10,?x11,?x12 then ?p1(?x0,?x1,?x2,?x3,?x4,?x5,?x6,?x7,?x8,?x9,?x10,?x11,?x12) $ ?p2(?x0,?x1,?x2,?x3,?x4,?x5,?x6,?x7,?x8,?x9,?x10,?x11,?x12)
	case ?x0,?x1,?x2,?x3,?x4,?x5,?x6,?x7,?x8,?x9,?x10,?x11,?x12,?x13 then ?p1(?x0,?x1,?x2,?x3,?x4,?x5,?x6,?x7,?x8,?x9,?x10,?x11,?x12,?x13) $ ?p2(?x0,?x1,?x2,?x3,?x4,?x5,?x6,?x7,?x8,?x9,?x10,?x11,?x12,?x13)
	case ?x0,?x1,?x2,?x3,?x4,?x5,?x6,?x7,?x8,?x9,?x10,?x11,?x12,?x13,?x14 then ?p1(?x0,?x1,?x2,?x3,?x4,?x5,?x6,?x7,?x8,?x9,?x10,?x11,?x12,?x13,?x14) $ ?p2(?x0,?x1,?x2,?x3,?x4,?x5,?x6,?x7,?x8,?x9,?x10,?x11,?x12,?x13,?x14);

set LazyOr
    case ?p1, ?p2, ?p3 then E(LazyOrPackage{?p1, ?p2}, ?p3);

package CompoundPackage{?f1, ?f2}
    case ?x, ?y then ?f1(?x, ?z) & ?f2(?z, ?y);

set Compound
    case ?f1, ?f2, ?f3 then E(?f3, CompoundPackage{?f1, ?f2});

set Feed
    case ?f, [], ?r, ?r
    case ?f, [?x * ?xs], ?ri, ?rj then ?f(?x, ?ri, ?rk) & Feed(?f, ?xs, ?rk, ?rj);